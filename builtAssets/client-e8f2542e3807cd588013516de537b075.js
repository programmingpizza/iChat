!function(t,o,e){var s=function(t){return this.options=t,this.status=new Backbone.Model,this.user=new UserModel,this.users=new UsersCollection,this.rooms=new RoomsCollection,this.events=e.extend({},Backbone.Events),this};s.prototype.getUser=function(){var t=this;this.socket.emit("account:whoami",function(o){t.user.set(o)})},s.prototype.updateProfile=function(t){var o=this;this.socket.emit("account:profile",t,function(t){o.user.set(t)})},s.prototype.createRoom=function(t){var o=this,e={name:t.name,slug:t.slug,description:t.description,password:t.password,participants:t.participants,"private":t["private"]},s=t.callback;this.socket.emit("rooms:create",e,function(t){t&&t.errors?swal("Unable to create room","Room slugs can only contain lower case letters, numbers or underscores!","error"):t&&t.id&&(o.addRoom(t),o.switchRoom(t.id)),s&&s(t)})},s.prototype.getRooms=function(t){var o=this;this.socket.emit("rooms:list",{users:!0},function(s){o.rooms.set(s),e.each(s,function(t){t.users&&o.setUsers(t.id,t.users)}),t&&t(s)})},s.prototype.switchRoom=function(t){if(this.rooms.last.set("id",this.rooms.current.get("id")),!t||"list"===t)return this.rooms.current.set("id","list"),void this.router.navigate("!/",{replace:!0});var o=this.rooms.get(t);return o&&o.get("joined")?(this.rooms.current.set("id",t),void this.router.navigate("!/room/"+o.id,{replace:!0})):void(o?this.joinRoom(o,!0):this.joinRoom({id:t},!0))},s.prototype.updateRoom=function(t){this.socket.emit("rooms:update",t)},s.prototype.roomUpdate=function(t){var o=this.rooms.get(t.id);return o?void o.set(t):void this.addRoom(t)},s.prototype.addRoom=function(t){var o=this.rooms.get(t.id);return o?o:this.rooms.add(t)},s.prototype.archiveRoom=function(t){this.socket.emit("rooms:archive",t,function(t){"No Content"!==t&&swal("Unable to Archive!","Unable to archive this room!","error")})},s.prototype.roomArchive=function(t){this.leaveRoom(t.id),this.rooms.remove(t.id)},s.prototype.rejoinRoom=function(t){this.joinRoom(t,void 0,!0)},s.prototype.lockJoin=function(t){return e.contains(this.joining,t)?!1:(this.joining=this.joining||[],this.joining.push(t),!0)},s.prototype.unlockJoin=function(t){var o=this;e.defer(function(){o.joining=e.without(o.joining,t)})},s.prototype.joinRoom=function(t,o,s){if(t&&t.id){var i=this,n=t.id,r=t.password;if(!s){var a=i.rooms.get(n);if(a&&a.get("joined"))return}if(this.lockJoin(n)){var c=function(e){t.password=e,i.joinRoom(t,o,s)};this.socket.emit("rooms:join",{roomId:n,password:r},function(t){if(t){if(t&&t.errors&&"password required"===t.errors)return i.passwordModal.show({roomName:t.roomName,callback:c}),void i.unlockJoin(n);if(t&&t.errors)return void i.unlockJoin(n);var r=i.addRoom(t);r.set("joined",!0),r.get("hasPassword")&&i.getRoomUsers(r.id,e.bind(function(t){this.setUsers(r.id,t)},i)),i.getMessages({room:r.id,since_id:r.lastMessage.get("id"),take:200,expand:"owner, room",reverse:!0},function(t){t.reverse(),i.addMessages(t,!s&&!r.lastMessage.get("id")),!s&&r.lastMessage.set(t[t.length-1])}),i.options.filesEnabled&&i.getFiles({room:r.id,take:15},function(t){t.reverse(),i.setFiles(r.id,t)}),o&&i.switchRoom(n);var a=i.user.get("openRooms");e.contains(a,n)||a.push(n),i.socket.emit("account:profile",{openRooms:a}),i.unlockJoin(n)}})}}},s.prototype.leaveRoom=function(t){var o=this.rooms.get(t);if(o&&(o.set("joined",!1),o.lastMessage.clear(),o.get("hasPassword")&&o.users.set([])),this.socket.emit("rooms:leave",t),t===this.rooms.current.get("id")){var o=this.rooms.get(this.rooms.last.get("id"));this.switchRoom(o&&o.get("joined")?o.id:"")}var s=this.user.get("openRooms");s=e.without(s,t),this.socket.emit("account:profile",{openRooms:s})},s.prototype.getRoomUsers=function(t,o){this.socket.emit("rooms:users",{room:t},o)},s.prototype.addMessage=function(t){var o=this.rooms.get(t.room);o&&t&&(o.set("lastActive",t.posted),t.historical||o.lastMessage.set(t),o.trigger("messages:new",t))},s.prototype.addMessages=function(t,o){e.each(t,function(t){o&&(t.historical=!0),this.addMessage(t)},this)},s.prototype.sendMessage=function(t){this.socket.emit("messages:create",t)},s.prototype.getMessages=function(t,o){this.socket.emit("messages:list",t,o)},s.prototype.getFiles=function(t,o){this.socket.emit("files:list",{room:t.room||"",take:t.take||40,expand:t.expand||"owner"},o)},s.prototype.setFiles=function(t,o){if(t&&o&&o.length){var e=this.rooms.get(t);e&&e.files.set(o)}},s.prototype.addFile=function(t){var o=this.rooms.get(t.room);o&&o.files.add(t)},s.prototype.setUsers=function(t,o){if(t&&o&&o.length){var e=this.rooms.get(t);e&&e.users.set(o)}},s.prototype.addUser=function(t){var o=this.rooms.get(t.room);o&&o.users.add(t)},s.prototype.removeUser=function(t){var o=this.rooms.get(t.room);o&&o.users.remove(t.id)},s.prototype.updateUser=function(t){t.id==this.user.id&&this.user.set(t),this.rooms.each(function(o){var e=o.users.findWhere({id:t.id});e&&e.set(t)},this)},s.prototype.getUsersSync=function(){function t(t){e.users.set(t)}if(this.users.length)return this.users;var e=this;return o.ajax({url:"./users",async:!1,success:t}),this.users},s.prototype.getEmotes=function(t){this.extras=this.extras||{},this.extras.emotes||(this.extras.emotes=o.get("./extras/emotes")),t&&this.extras.emotes.done(t)},s.prototype.getReplacements=function(t){this.extras=this.extras||{},this.extras.replacements||(this.extras.replacements=o.get("./extras/replacements")),t&&this.extras.replacements.done(t)},s.prototype.route=function(){var t=this,o=Backbone.Router.extend({routes:{"!/room/":"list","!/room/:id":"join","*path":"list"},join:function(o){t.switchRoom(o)},list:function(){t.switchRoom("list")}});this.router=new o,Backbone.history.start()},s.prototype.listen=function(){function o(t){var o=e.map(t,function(t){return t.id}),i=s.user.get("openRooms")||[];e.defer(function(){e.each(i,function(t){e.contains(o,t)&&s.joinRoom({id:t})})}.bind(this))}var s=this,i="/"+e.compact(t.location.pathname.split("/").concat(["socket.io"])).join("/");this.socket=io.connect({path:i,reconnection:!0,reconnectionDelay:500,reconnectionDelayMax:1e3,timeout:3e3}),this.socket.on("connect",function(){s.getUser(),s.getRooms(o),s.status.set("connected",!0)}),this.socket.on("reconnect",function(){e.each(s.rooms.where({joined:!0}),function(t){s.rejoinRoom(t)})}),this.socket.on("messages:new",function(t){s.addMessage(t)}),this.socket.on("rooms:new",function(t){s.addRoom(t)}),this.socket.on("rooms:update",function(t){s.roomUpdate(t)}),this.socket.on("rooms:archive",function(t){s.roomArchive(t)}),this.socket.on("users:join",function(t){s.addUser(t)}),this.socket.on("users:leave",function(t){s.removeUser(t)}),this.socket.on("users:update",function(t){s.updateUser(t)}),this.socket.on("files:new",function(t){s.addFile(t)}),this.socket.on("disconnect",function(){s.status.set("connected",!1)}),this.events.on("messages:send",this.sendMessage,this),this.events.on("rooms:update",this.updateRoom,this),this.events.on("rooms:leave",this.leaveRoom,this),this.events.on("rooms:create",this.createRoom,this),this.events.on("rooms:switch",this.switchRoom,this),this.events.on("rooms:archive",this.archiveRoom,this),this.events.on("profile:update",this.updateProfile,this),this.events.on("rooms:join",this.joinRoom,this)},s.prototype.start=function(){return this.getEmotes(),this.getReplacements(),this.listen(),this.route(),this.view=new t.LCB.ClientView({client:this}),this.passwordModal=new t.LCB.RoomPasswordModalView({el:o("#lcb-password")}),this},t.LCB=t.LCB||{},t.LCB.Client=s}(window,$,_);